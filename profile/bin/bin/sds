#!/bin/bash

PROGRAM_NAME=`basename $0`
ARGS=$1

SYSD_STATUS=$(systemctl list-unit-files | grep "suspend.target" | grep -c "static")

function enable_suspension {
	if [ "$SYSD_STATUS" == "0" ]; then
		printf "\nEnabling suspension...\n"
		systemctl unmask sleep.target suspend.target hibernate.target hybrid-sleep.target
	else
		printf "\nSuspension is already enabled.\n"
	fi
}

function disable_suspension {
	if [ "$SYSD_STATUS" == "1" ]; then
		printf "\nDisabling suspension...\n"
		systemctl mask sleep.target suspend.target hibernate.target hybrid-sleep.target
	else
		printf "\nSuspension is already disabled.\n"
	fi
}

function toggle_suspension {
	if [ "$SYSD_STATUS" == "1" ]; then
		disable_suspension
	else
		enable_suspension
	fi
}

function show_status {
	if [ "$SYSD_STATUS" == "1" ]; then
		printf "\nSuspension is currently enabled.\n"
	else
		printf "\nSuspension is currently disabled.\n"
	fi
}

function show_help {
	printf "\nUsage: %s [OPTION] <COMMAND>" "$PROGRAM_NAME"
	printf "\nChange suspension/hibernation control in systems with systemd.\n"
	printf "\n   OPTIONS:\n"
	printf "\n     --help    Prints this help page.\n"
	printf "\n  COMMANDS:\n"
	printf "\n     enable    Enable suspension/hibernation."
	printf "\n    disable    Disable suspension/hibernation."
	printf "\n     toggle    Toggles the current state*."
	printf "\n    <empty>    If no command is passed, the suspension status is shown.\n"
	printf "\n* e.g.: If suspension is enabled, \"toggle\" will"
	printf "\n        disable it (and vice versa).\n"
	printf "\nPlease notice that this script is will only works in"
	printf "\nsystems where systemd is available.\n"
}

if [ "$ARGS" == "" ]; then
	show_status
elif [ "$ARGS" == "enable" ]; then
	enable_suspension
elif [ "$ARGS" == "disable" ]; then
	disable_suspension
elif [ "$ARGS" == "toggle" ]; then
	toggle_suspension
elif [ "$ARGS" == "--help" ] || [ "$ARGS" == "-h" ]; then
	show_help
else
	show_help
fi
